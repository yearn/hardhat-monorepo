name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  unit:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        package: ["stealth-txs", "yswaps", "strategies-keep3r"]
    steps:
      - name: Check out github repository
        id: github-checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v11

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        if: contains(steps.changed-files.outputs.modified_files, matrix.package)
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install node
        id: install-node
        uses: actions/setup-node@v1
        if: steps.cache-node-modules.outputs.triggered == 'true'
        with:
          node-version: "12.x"

      - name: Install dependencies & compile contracts
        id: install-dependencies
        if: steps.install-node.outputs.triggered == 'true'
        run: lerna bootstrap ; lerna exec --ignore @yearn/commons -- yarn compile ; rm -rf node_modules ; lerna bootstrap

      - name: Run unit tests
        id: unit-test
        if: steps.install-dependencies.outputs.triggered == 'true'
        run: lerna exec --scope @yearn/${{ matrix.package }} -- yarn test:unit

  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        package: ["stealth-txs", "yswaps"]
    steps:
      - name: Check out github repository
        id: github-checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v11

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        if: contains(steps.changed-files.outputs.modified_files, matrix.package)
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install node
        id: install-node
        uses: actions/setup-node@v1
        if: steps.cache-node-modules.outputs.triggered == 'true'
        with:
          node-version: "12.x"

      - name: Install dependencies & compile contracts
        id: install-dependencies
        if: steps.install-node.outputs.triggered == 'true'
        run: lerna bootstrap ; lerna exec --ignore @yearn/commons -- yarn compile ; rm -rf node_modules ; lerna bootstrap

      - name: Run e2e tests
        id: e2e-test
        if: steps.install-dependencies.outputs.triggered == 'true'
        run: lerna exec --scope @yearn/${{ matrix.package }} -- yarn test:e2e

  integration:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        package: ["yswaps", "strategies-keep3r"]
    steps:
      - name: Check out github repository
        id: github-checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v11

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        if: contains(steps.changed-files.outputs.modified_files, matrix.package)
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Cache hardhat network fork
        uses: actions/cache@v2
        id: cache-network-fork
        if: steps.cache-node-modules.outputs.triggered == 'true' && hashFiles('packages/${{matrix.package}}/test/integration/fork-block-numbers.ts') != ''
        with:
          path: packages/${{matrix.package}}/cache/hardhat-network-fork
          key: ${{ runner.os }}-${{matrix.package}}-network-fork-${{ hashFiles('packages/${{matrix.package}}/test/integration/fork-block-numbers.ts') }}

      - name: Install node
        id: install-node
        uses: actions/setup-node@v1
        if: steps.cache-node-modules.outputs.triggered == 'true'
        with:
          node-version: "12.x"

      - name: Install dependencies & compile contracts
        id: install-dependencies
        if: steps.install-node.outputs.triggered == 'true'
        run: lerna bootstrap ; lerna exec --ignore @yearn/commons -- yarn compile ; rm -rf node_modules ; lerna bootstrap

      - name: Run integration tests
        id: integration-test
        if: steps.install-dependencies.outputs.triggered == 'true'
        run: lerna exec --scope @yearn/${{ matrix.package }} -- yarn test:integration
        env:
          ETH_NODE_URI_MAINNET: https://eth-mainnet.alchemyapi.io/v2/${{ secrets.ALCHEMYKEY }}
          ETH_NODE_URI_POLYGON: https://polygon-mainnet.g.alchemy.com/v2/${{ secrets.POLYGON_ALCHEMYKEY }}
          ETH_NODE_URI_FANTOM: https://rpc.ftm.tools/